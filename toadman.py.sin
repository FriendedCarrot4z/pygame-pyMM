
# Copyright (C) Johan Ceuppens 2010
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.


import pygame
from pygame.locals import *
from gameobject import *
from stateimagelibrary import *
import random
from os import *
from time import *
from math import *
from random import *
from rng import *

class ToadMan(Gameobject):
    "Toad Man"
    def __init__(self,xx,yy):
	Gameobject.__init__(self, xx, yy)
        self.w = 50
        self.h = 50 
        self.hitpoints = 15 
        
        self.yy = yy
    
#        self.stimlibleft = Stateimagelibrary()	
#        image = pygame.image.load('./pics/toadman-static-left-1.bmp').convert()
#        image.set_colorkey((0,0,0)) 
#	self.stimlibleft.addpicture(image)
#        image = pygame.image.load('./pics/toadman-preparing-left-1.bmp').convert()
#        image.set_colorkey((0,0,0)) 
#	self.stimlibleft.addpicture(image)
#        image = pygame.image.load('./pics/toadman-duck-left-1.bmp').convert()
#        image.set_colorkey((0,0,0)) 
#	self.stimlibleft.addpicture(image)
#        image = pygame.image.load('./pics/toadman-jump-left-1.bmp').convert()
#        image.set_colorkey((0,0,0)) 
#	self.stimlibleft.addpicture(image)

#        self.stimlibright = Stateimagelibrary()	
#        image = pygame.image.load('./pics/toadman-static-right-1.bmp').convert()
#        image.set_colorkey((0,0,0)) 
#	self.stimlibright.addpicture(image)
#        image = pygame.image.load('./pics/toadman-preparing-right-1.bmp').convert()
#        image.set_colorkey((0,0,0)) 
#	self.stimlibright.addpicture(image)
#        image = pygame.image.load('./pics/toadman-duck-right-1.bmp').convert()
#        image.set_colorkey((0,0,0)) 
#	self.stimlibright.addpicture(image)
#        image = pygame.image.load('./pics/toadman-jump-right-1.bmp').convert()
#        image.set_colorkey((0,0,0)) 
#	self.stimlibright.addpicture(image)

        self.stimlib = Stateimagelibrary()	
        image = pygame.image.load('./pics/megaman-left-1.bmp').convert()
        image.set_colorkey((0,0,0)) 
	self.stimlib.addpicture(image)

	self.jumpradius = 3
	self.rr = 0.0

	self.startx = self.x
	self.starty = self.y
	self.jumping = 0
	self.direction = 1 ## facing left is 1, right is 0 

    def draw(self, screen, room):
	###FIXME self.stimlib.draw(screen, self.x-40+room.relativex,self.y+room.relativey)
	self.stimlib.draw(screen, self.x,self.y)
	    
    def update(self,room,player):
	###if randint(0,10) == 10 and self.jumping == 0:
	if self.jumping == 0:
		self.jumping = -1
	sleep(0.00001)	
	if self.jumping < 0:
		self.x -= 1
		
		self.y = sin(self.rr) * 120 + 300
		print "r=%f y=%f" % (self.rr,self.y)
#		if sin(self.rr) <= 1 and sin(self.rr) >= 0:	
#			self.rr -= 0.01	
#		elif sin(self.rr) >= -1 and sin(self.rr) < 0:
#			self.rr -= 0.01

		if sin(self.rr) >= 0.9:
			self.direction = 0
		elif sin(self.rr) <= 0:
			self.direction = 1

		if self.direction == 0:
			self.rr -= 0.01	
		elif self.direction == 1:
			self.rr += 0.01	
	
    def fx(self, x):
	self.x = x	

    def fy(self, y):
	###self.y = sqrt(self.x*self.x - self.jumpradius*self.jumpradius) * 10 
	self.y = self.x*self.x - self.jumpradius*self.jumpradius 

    def fight(self,room,player,keydown = -1):
        1

